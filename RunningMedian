vector<double> runningMedian(vector<int> a) {
        vector<double> res;
        priority_queue<int, vector<int>, greater<int>> minheap;
        priority_queue<int> maxheap;

        double median = 0;

        for (int i=0; i<a.size(); i++) {
                if (a[i] <= median) {
                        maxheap.push(a[i]);
                } else {
                        minheap.push(a[i]);
                }

                if (minheap.size() > maxheap.size()+1) {
                        maxheap.push(minheap.top());
                        minheap.pop();
                }
                if (maxheap.size() > minheap.size()+1) {
                        minheap.push(maxheap.top());
                        maxheap.pop();
                }

                if (minheap.size() == maxheap.size()) {
                        median = (maxheap.top() + minheap.top())/2.0;
                } else if(minheap.size() > maxheap.size()) {
                        median = (double)minheap.top();
                } else if (minheap.size() < maxheap.size()) {
                        median = (double)maxheap.top();
                }
                res.push_back(median);
        }
        return res;
}
